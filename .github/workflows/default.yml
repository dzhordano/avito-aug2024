name: Lint & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set-up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.5
      - name: lint
        uses:
          golangci/golangci-lint-action@v3
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set-up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.5

      - name: Unit tests
        run: |
          go test --short ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

      - name: Go Coverage Badge  # Pass the `coverage.out` output to this action
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: coverage.out

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v16
        id: verify-changed-files
        with:
          files: README.md

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}

  integration-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: qwerty
        options: >-
          --name bootcampdb_test
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5556:5432
    steps:
      - name: Set-up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.5

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Integration tests
        run: GIN_MODE=release go test -v ./tests/
        env:
          TEST_DB_DSN: postgres://postgres:qwerty@0.0.0.0:5556/postgres?sslmode=disable

      - name: Stop test db
        run: docker stop bootcampdb_test
